# Source: opentelemetry-operator/templates/collector.yaml
apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: dev-workstream-2-collector
  namespace: monitoring
spec:
  mode: deployment
  image: otel/opentelemetry-collector-contrib:latest
  securityContext:
    runAsUser: 1005
    runAsNonRoot: true
    allowPrivilegeEscalation: false
    seccompProfile:
      type: RuntimeDefault
    capabilities:
      drop:
        - ALL
  config:
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
            include_metadata: true

    processors:
      memory_limiter:
        check_interval: 1s
        limit_percentage: 75
        spike_limit_percentage: 15
      batch:
        send_batch_size: 5000
        send_batch_max_size: 10000
        timeout: 10s
      tail_sampling:
        decision_wait: 5s
        num_traces: 1000
        expected_new_traces_per_sec: 10
        policies:
          - name: sample_10_percent
            type: probabilistic
            probabilistic:
              sampling_percentage: 10
      # attributes/add:
      #   actions:
      #     - key: http.perf_test_id
      #       from_context: metadata.x-perf-test-id
      #       action: upsert

    exporters:
      otlp:
        endpoint: dev-grafana-tempo-distributor.grafana-tempo.svc.cluster.local:4317
        tls:
          insecure: true
      
      otlphttp/logs:
        endpoint: http://loki-write.monitoring.svc.cluster.local:3100/otlp
      
      # # Data sources: metrics
      # prometheus:
      #   endpoint: 0.0.0.0:8889
      #   namespace: monitoring
      #   send_timestamps: true
      #   resource_to_telemetry_conversion:
      #     enabled: true

    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [memory_limiter, tail_sampling, batch]
          exporters: [otlp]
        logs:
          receivers: [otlp]
          processors: [memory_limiter, batch]
          exporters: [otlphttp/logs]
        # metrics:
        #   receivers: [otlp]
        #   processors: [memory_limiter, batch]
        #   exporters: [prometheus]

      telemetry:
        logs:
          level: INFO
        metrics:
          level: detailed